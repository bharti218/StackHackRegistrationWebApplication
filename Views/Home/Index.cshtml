@model StackHackRegistrationWebApplication.Models.User

@{
    ViewBag.Title = "Index";
}

<h2>Register for an exciting Gaming Night!</h2>

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
}

else
{
    using (Html.BeginForm("Index", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BookingType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.BookingType)*@

            @Html.EnumDropDownListFor(model => model.BookingType)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NoOfTickets, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NoOfTickets, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NoOfTickets, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IDCard, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-offset-2 col-md-10">
            <canvas id="canvas" width="300" height="200" style="border:1px solid; border-color:darkgray"></canvas>
            <input type="file" id="img" name="img" onchange="encodeImageFileAsURL(this)" />

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" style="background-color:darkgreen; color:aliceblue" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" id="preview" value="Preview" style="background-color:midnightblue; color:aliceblue" />
        </div>
    </div>
</div>

        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
    }

}






@section Scripts{
    <script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">

       // $(document).ready(function () {

        window.onload = function () {
            // check if url has preview
            if (window.location.href.indexOf("preview") > -1) {
                var full_name = sessionStorage.getItem('name');
                $('#Mobile').val(full_name);
            }
        }
        //})

        jQuery("input#img").change(function () {

            let fileInput = document.getElementById('img');
            let img_file = fileInput.files[0];
            const context = canvas.getContext('2d');
            context.clearRect(0, 0, canvas.width, canvas.height);

            console.log("here");
            draw_on_canvas();
            
            
        })


        function draw_on_canvas() {
            let fileInput = document.getElementById('img');
            let img_file = fileInput.files[0];
            var reader = new FileReader();
            reader.readAsDataURL(img_file);
            reader.onloadend = function (e) {
                var image = new Image();
                image.src = e.target.result;
                image.onload = function () {
                    var canvas = document.getElementById('canvas');
                    var ctx = canvas.getContext('2d');
                    ctx.drawImage(image, 0, 0);
                }
            }
            console.log(fileInput);
          // encodeImageFileAsURL(fileInput);
        }

        function get_64_base_img() {
            let canvas = document.getElementById('canvas');
            let data_url = canvas.toDataURL("image/png");
           
            var data = data_url.replace(/^data:image\/(png|jpg);base64,/, "");
            return data;
        }
        function encodeImageFileAsURL(element) {

            var file = element.files[0];
            console.log(file);
            var reader = new FileReader();
            reader.onloadend = function () {

                sessionStorage.setItem('pic', reader.result);
                console.log('RESULT', reader.result);
                
            }
            reader.readAsDataURL(file);
        }
        $('#preview').on('click', function () {
            var name = $('#FullName').val();
            var mobile = $('#Mobile').val();
            var email = $('#Email').val();
            var tickets = $('#NoOfTickets').val();
            var type = $('#BookingType').val();


            sessionStorage.setItem('name', name);
            sessionStorage.setItem('mobile', mobile);
            sessionStorage.setItem('email', email);
            sessionStorage.setItem('tickets', tickets);
            sessionStorage.setItem('type', type);

            //Html.ActionLink("Preview","Preview", new { id = "preview" })

            window.open('/Home/Preview/preview', '_blank');

        })

      
    </script>
}

